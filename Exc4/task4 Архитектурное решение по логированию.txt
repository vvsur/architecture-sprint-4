### Планирование логирования как часть решения "Наблюдаемости"

---

#### **Мотивация**

Логирование — ключевой инструмент для анализа и диагностики системы, который дополняет мониторинг и трейсинг. Оно позволяет детально фиксировать все события в системе, выявлять причины сбоев и находить узкие места.  

Основные задачи логирования:
1. **Выявление проблем:** Помогает установить причину сбоев, включая потерю заказов или ошибки бизнес-логики.
2. **Диагностика:** Логи дают полное представление о ходе выполнения процессов.
3. **Аналитика:** Позволяют исследовать поведение системы и ее пользователей для последующей оптимизации.
4. **Интеграция:** Логирование в формате JSON совместимо с Elasticsearch, что облегчает анализ и визуализацию данных.

---

### **Системы для логирования (Схема C4)**

#### **Контекст системы (Level 1):**
На уровне системы логирование необходимо для следующих компонентов:
- **Интернет-магазин:** Логи создания заказов, пользовательских действий и состояния API.
- **CRM:** Логи операций с заказами, передачи данных в MES и взаимодействия с базами данных.
- **MES:** Полное логирование операций, включая расчет стоимости, статус обработки заказов и взаимодействие с очередями RabbitMQ.
- **RabbitMQ:** Фиксация всех сообщений, включая их передачу и ошибки.
- **Базы данных (PostgreSQL):** Логи выполнения запросов и состояния.

#### **Контейнерный уровень (Level 2):**
Для логирования необходимо:
- Логирование контейнеров приложений (Интернет-магазин, CRM, MES).
- Логирование инфраструктурных компонентов (RabbitMQ, PostgreSQL).

---

### **Что будем логировать**

#### **Бизнесовые события:**
1. **Создание заказа:** Данные о заказе, пользователе и источнике.
2. **Изменение заказа:** Статусы и идентификатор оператора.
3. **Передача заказа:** От CRM в MES.
4. **Обработка заказа:** Логи этапов выполнения (обработка, доставка, завершение).
5. **Состояние заказа:** Информация о потерянных заказах.

#### **Системные события:**
1. **Ошибки API:** Проблемы интеграции и сбои в обработке запросов.
2. **Ошибки RabbitMQ:** Dead-letter сообщения.
3. **Состояние баз данных:** Логи долгих запросов и ошибок записи.
4. **Инфраструктурные события:** Уровень загрузки CPU, RAM и дисков.

---

### **Решение для логирования**

#### **Технологический стек:**
1. **Logstash:** Сбор и отправка логов в Elasticsearch.
2. **Elasticsearch:** Хранилище для индексации и поиска логов.
3. **Kibana:** Визуализация данных для быстрого анализа.
4. **JSON-формат:** Унифицированное хранение логов для совместимости.

---

### **Метрики логов**

1. **Время обработки заказа:**
   - Время от создания заказа до завершения обработки.
2. **Ошибки передачи:**
   - Количество и причины ошибок при передаче данных (CRM → MES, MES → RabbitMQ).
3. **Загрузка компонентов:**
   - Информация о загрузке CPU, RAM, очередей RabbitMQ.
4. **Количество запросов:**
   - Статистика успешных (HTTP 200) и неуспешных (HTTP 500) запросов.

---

### **Политика безопасности и хранения**

1. **Безопасность:**
   - Доступ к логам через SSO с использованием Keycloak или Active Directory.
   - Разделение прав доступа по ролям: инженеры, аналитики, специалисты по безопасности.
2. **Сроки хранения:**
   - Бизнес-логи (персональные данные): не менее 3 лет.
   - Технические логи: 6 месяцев или больше, в зависимости от объема.

---

### **Приоритеты внедрения логирования**

1. **MES и API:**
   - Самая нагруженная часть системы, где высока вероятность ошибок.
2. **CRM:** 
   - Логирование операций с заказами и передачи данных.
3. **Интернет-магазин:** 
   - Логирование пользовательских действий и API.

---

### **План действий по логированию**

1. **Схема C4:**
   - Обновить текущую архитектуру с выделением систем для логирования.
   - Добавить схему в Git для совместной работы.
2. **Настройка Logstash и Elasticsearch:**
   - Подключение всех компонентов системы.
   - Форматирование логов в JSON.
3. **Настройка Kibana:**
   - Создание дашбордов для анализа логов.
   - Настройка алертов для критических событий.
4. **Обучение сотрудников:**
   - Провести обучение по анализу логов и использованию Kibana.

---

Внедрение логирования как части системы наблюдаемости обеспечит:
- Прозрачность работы системы.
- Быструю диагностику и устранение проблем.
- Улучшение качества обслуживания клиентов за счет оперативного решения сбоев.

Это стратегическое решение, которое позволит компании справляться с растущими нагрузками и поддерживать высокий уровень надежности.