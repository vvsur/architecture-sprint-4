### Анализ системы, описание и мотивация внедрения мониторинга

---

#### **Мотивация**

Внедрение мониторинга – это не только стратегическая необходимость для стабильной работы системы, но и обязательный этап подготовки к оптимизации. Без точного понимания текущего состояния системы невозможно определить, где именно следует применять улучшения. Мониторинг обеспечивает прозрачность, выявляет узкие места и позволяет компании двигаться в сторону систематического улучшения.

**Зачем нужен мониторинг?**

1. **Определение проблемных зон:**
   - Перед тем как оптимизировать систему, нужно понимать, где это необходимо. Например, анализ метрик поможет выявить медленные запросы, перегруженные компоненты или узкие места в инфраструктуре.

2. **Бизнес-решения на основе данных:**
   - Мониторинг – это часть требований бизнеса. Информация о сторонних пользователях API позволяет принимать обоснованные бизнес-решения, такие как прогнозирование нагрузки, планирование обновлений и улучшение клиентского опыта.

3. **Снижение операционных рисков:**
   - Построение системы наблюдаемости (Observability) помогает не только быстро реагировать на сбои, но и предвосхищать их. Это сокращает время простоя и минимизирует вероятность повторения ошибок.

---

### План действий по внедрению мониторинга

#### **Шаг 1. Определение ключевых метрик**
- Для каждой системы определить набор метрик, который даст наиболее полное представление о ее состоянии:
  - **API:** время отклика (latency), RPS, успешные и неуспешные запросы.
  - **RabbitMQ:** количество сообщений в очереди, количество dead-letter сообщений.
  - **Базы данных:** использование памяти, количество подключений, размер базы.
  - **S3-хранилище:** объем используемого хранилища.

#### **Шаг 2. Настройка сбора и хранения метрик**
- Использовать инструменты, такие как Prometheus и Grafana, для сбора, хранения и визуализации данных.
- Обеспечить настройку Alerting для критических метрик (например, превышение времени отклика или рост ошибок).

#### **Шаг 3. Реализация трассировки запросов**
- Внедрить distributed tracing (например, OpenTelemetry) для анализа путей запросов через все компоненты системы.
- Настроить трассировку заказов с помощью уникальных идентификаторов.

#### **Шаг 4. Построение системы наблюдаемости**
- Внедрить Observability, включая логирование (Kibana/ElasticSearch) и трассировку, для проактивного анализа и предотвращения потенциальных проблем.

#### **Шаг 5. Автоматизация мониторинга**
- Настроить автоматическую проверку ключевых метрик во время CI/CD процессов.
- Внедрить Dashboard для ежедневного анализа состояния системы.

---

### Список задач для плана действий

1. **Добавить метрики к S3-хранилищу:**
   - Размер хранилища.
   - Частота доступа.
   - Использование хранилища для расчета стоимости.

2. **Расширить мониторинг API:**
   - Настроить подсчет HTTP 200/500.
   - Включить метрики для всех подключений сторонних пользователей.

3. **Настроить мониторинг RabbitMQ:**
   - Отслеживание сообщений в очереди.
   - Анализ dead-letter-exchange сообщений.

4. **Внедрить трассировку для всех систем:**
   - MES, CRM, API, RabbitMQ.
   - Обеспечить сквозное отслеживание заказов.

5. **Настроить визуализацию:**
   - Создать общую Dashboard в Grafana для анализа всех ключевых систем.

6. **Добавить уведомления:**
   - Настроить уведомления об ошибках и превышении пороговых значений для критических метрик.

7. **Провести нагрузочное тестирование:**
   - Проверить текущую пропускную способность систем.
   - Оценить влияние мониторинга на производительность.

---

### Выгоды от внедрения мониторинга

- **Прозрачность:** Точное понимание состояния всех компонентов системы.
- **Стабильность:** Сокращение времени на поиск и устранение проблем.
- **Бизнес-ценность:** Принятие решений на основе данных о реальной нагрузке и поведении системы.
- **Готовность к росту:** Возможность масштабирования и оптимизации с учетом текущих данных.

Внедрение мониторинга – это первый шаг к построению системы, которая будет готова к расширению и устойчивой работе под растущими нагрузками.