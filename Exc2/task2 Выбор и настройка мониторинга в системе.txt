### Анализ системы, описание и мотивация внедрения мониторинга

#### **Мотивация**

Внедрение мониторинга – не просто технический шаг, это стратегическая необходимость, обусловленная текущими проблемами и перспективами развития компании. Сейчас у компании всего один Интернет-магазин, одна CRM-система, одна MES, два API, RabbitMQ и две базы данных PostgreSQL. Каждая из этих систем важна для обеспечения бизнес-процессов, и любое отклонение в их работе может привести к потере клиентов, доходов и репутации.

**Зачем нужен мониторинг?**
- **Ответ на вопрос "что случилось":** Мониторинг позволяет фиксировать текущие сбои и разбираться в их причинах.
- **Минимизация последствий ошибок:** Осторожность при выводе новых функций в продакшн должна подкрепляться системой, которая дает информацию о состоянии всех компонентов.
- **Снижение риска повторных ошибок:** Комплексный мониторинг помогает выявлять узкие места, которые могли быть незаметны при изначальном проектировании системы.

Однако стоит подчеркнуть, что мониторинг сам по себе – это реактивный инструмент, который отвечает на вопрос, что произошло. Чтобы предотвратить проблемы, компания должна внедрить **Observability** (наблюдаемость) как принцип работы. Это проактивный подход, который позволяет не просто реагировать на сбои, а предвосхищать их. Руководство должно рассматривать внедрение мониторинга как стратегическое решение, направленное на то, чтобы избежать подобных ситуаций в будущем, даже если это потребует значительных инвестиций.

---

### Выбор подхода к мониторингу

Для нашей системы предлагаются следующие виды мониторинга:

1. **Мониторинг производительности оборудования:**
   - CPU, RAM, использование дисков для всех ключевых систем.
   - Сетевой мониторинг обработки запросов.

2. **Мониторинг баз данных:**
   - Использование памяти.
   - Количество подключений.
   - Размер хранилища.

3. **Мониторинг API:**
   - Время отклика (latency).
   - Количество запросов (RPS).
   - Соотношение успешных (HTTP 200) и неуспешных запросов (HTTP 500).

Мы отказываемся от использования метода **USE**, так как он неэффективен при наличии кэширования, и выбираем подход **RED**. Этот подход позволяет реализовать распределенную трассировку, которая необходима для анализа потерянных заказов. Благодаря RED мы сможем отслеживать запросы на уровне всех сервисов и измерять время выполнения операций.

---

### Метрики для отслеживания

#### **RabbitMQ:**
1. **Number of dead-letter-exchange letters:** Объем сообщений, которые не удалось обработать.
2. **Number of messages in flight:** Сообщения в обработке, что важно для настройки Backpressure / Circuit Breaker.

#### **API:**
1. **Number of requests (RPS):**
   - Интернет-магазин API: для равномерной нагрузки.
   - CRM API: прогнозируемая нагрузка через очередь MES.
   - MES API: обязательно, так как нагрузка непредсказуема.
2. **CPU %:**
   - Обязательно для MES API, желательно для остальных.
3. **Memory utilization:**
   - MES API обязательно.
   - Остальные API – при возможности.
4. **Response time (latency):**
   - Для всех API.
5. **Number of HTTP 200/500:** 
   - Для построения статистики успешных и неуспешных запросов.
6. **Number of simultaneous sessions:** 
   - Для ограничения подключений (Backpressure / Circuit Breaker).

#### **Базы данных:**
1. **Memory utilization:**
   - MES DB обязательно.
   - Интернет-магазин DB – при увеличении нагрузки.
2. **Number of connections:**
   - Желательно для MES DB.
3. **Size of database:**
   - MES DB обязательно (кластеризация запланирована).

#### **S3-хранилище:**
1. **Size of S3 storage:** 
   - Необходим для анализа объема моделей, используемых для расчетов.

---

### Выгоды от внедрения мониторинга

- **Прозрачность системы:** Возможность понять текущее состояние и находить узкие места.
- **Снижение времени реакции на сбои:** Быстрое определение причин и локализация проблем.
- **Стабильная работа системы:** Меньшее количество простоев и ошибок.
- **Улучшение пользовательского опыта:** Снижение времени отклика приложений.

---

### Рекомендации по детализации метрик

На текущем этапе система компании относительно компактна, что позволяет использовать основные метрики без глубокой детализации. Однако по мере роста бизнеса необходимо:
1. **Собирать обратную связь от пользователей и разработчиков.**
2. **Проводить исследование на основе собранных данных.**
3. **Вносить изменения в планы развития мониторинга.**

Мониторинг, будучи частью системы наблюдаемости, поможет компании минимизировать сбои, оптимизировать процессы и подготовиться к дальнейшему росту.